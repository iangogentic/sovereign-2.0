[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sovereign-ai-agent"
version = "1.0.0"
description = "A private, powerful, locally-running AI assistant"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Sovereign AI Team", email = "team@sovereign-ai.dev"}
]
maintainers = [
    {name = "Sovereign AI Team", email = "team@sovereign-ai.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "torchaudio>=2.1.0",
    "transformers>=4.35.0",
    "accelerate>=0.24.0",
    "bitsandbytes>=0.41.0",
    "nvidia-ml-py3>=7.352.0",
    "pynvml>=11.4.1",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "sqlalchemy>=2.0.0",
    "chromadb>=0.4.0",
    "sounddevice>=0.4.6",
    "librosa>=0.10.1",
    "speechrecognition>=3.10.0",
    "pydub>=0.25.1",
    "pyaudio>=0.2.11",
    "pyttsx3>=2.90",
    "gTTS>=2.4.0",
    "pillow>=10.1.0",
    "pytesseract>=0.3.10",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "mss>=9.0.1",
    "pyautogui>=0.9.54",
    "psutil>=5.9.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "tqdm>=4.66.0",
    "openai>=1.3.0",
    "requests>=2.31.0",
    "httpx>=0.25.0",
    "pyyaml>=6.0.1",
    "configparser>=6.0.0",
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.2",
    "pvporcupine>=3.0.0",
    "pathlib2>=2.3.7",
    "typing-extensions>=4.8.0",
    "dataclasses-json>=0.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
]
full = [
    "jupyter>=1.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "tensorboard>=2.15.0",
    "wandb>=0.16.0",
]

[project.scripts]
sovereign = "sovereign.cli:main"
sovereign-ai = "sovereign.cli:main"

[project.urls]
Homepage = "https://github.com/sovereign-ai/sovereign"
Documentation = "https://github.com/sovereign-ai/sovereign/docs"
Repository = "https://github.com/sovereign-ai/sovereign"
"Bug Reports" = "https://github.com/sovereign-ai/sovereign/issues"
Changelog = "https://github.com/sovereign-ai/sovereign/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
sovereign = ["*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["sovereign"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "accelerate.*",
    "bitsandbytes.*",
    "nvidia_ml_py3.*",
    "pynvml.*",
    "sounddevice.*",
    "librosa.*",
    "speechrecognition.*",
    "pydub.*",
    "pyaudio.*",
    "pyttsx3.*",
    "gtts.*",
    "pytesseract.*",
    "cv2.*",
    "mss.*",
    "pyautogui.*",
    "chromadb.*",
    "faiss.*",
    "sentence_transformers.*",
    "pvporcupine.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "not_heavy: marks tests that don't use heavy imports (for fast startup verification)",
    "heavy: marks tests that use heavy imports and full integration",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 